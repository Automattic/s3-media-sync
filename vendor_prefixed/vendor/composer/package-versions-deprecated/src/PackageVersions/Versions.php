<?php

declare (strict_types=1);
namespace WPCOM_VIP\PackageVersions;

use WPCOM_VIP\Composer\InstalledVersions;
use OutOfBoundsException;
\class_exists(\WPCOM_VIP\Composer\InstalledVersions::class);
/**
 * This class is generated by composer/package-versions-deprecated, specifically by
 * @see \PackageVersions\Installer
 *
 * This file is overwritten at every run of `composer install` or `composer update`.
 *
 * @deprecated in favor of the Composer\InstalledVersions class provided by Composer 2. Require composer-runtime-api:^2 to ensure it is present.
 */
final class Versions
{
    /**
     * @deprecated please use {@see self::rootPackageName()} instead.
     *             This constant will be removed in version 2.0.0.
     */
    const ROOT_PACKAGE_NAME = 'wpcomvip/s3-media-sync';
    /**
     * Array of all available composer packages.
     * Dont read this array from your calling code, but use the \PackageVersions\Versions::getVersion() method instead.
     *
     * @var array<string, string>
     * @internal
     */
    const VERSIONS = array('aws/aws-sdk-php' => '3.150.3@4c4e1cef09a6b510eae7a871ec394d124b5005fe', 'composer/installers' => 'dev-main@98b34f8ab3558bee5caa7c07efbab3f5bd7663ab', 'composer/package-versions-deprecated' => 'dev-master@f921205948ab93bb19f86327c793a81edb62f236', 'guzzlehttp/guzzle' => '7.2.0@0aa74dfb41ae110835923ef10a9d803a22d50e79', 'guzzlehttp/promises' => 'dev-master@ddfeedfff2a52661429437da0702979f708e6ac6', 'guzzlehttp/psr7' => '1.x-dev@f47ece9e6e8ce74e3be04bef47f46061dc18c095', 'humbug/php-scoper' => '0.14.0@6ff13aaae731395d04c06fbdfa9ef08bbb879555', 'jetbrains/phpstorm-stubs' => 'dev-master@6eecf1bb879fc0c3c48e0ac3e049f77371503a11', 'mtdowling/jmespath.php' => 'dev-master@30dfa0064f4ec218f2cb86f66fc85fbc45bb4510', 'nikic/php-parser' => 'v4.10.4@c6d052fc58cb876152f89f532b95a8d7907e7f0e', 'psr/container' => 'dev-master@381524e8568e07f31d504a945b88556548c8c42e', 'psr/http-client' => 'dev-master@22b2ef5687f43679481615605d7a15c557ce85b1', 'psr/http-message' => 'dev-master@efd67d1dc14a7ef4fc4e518e7dee91c271d524e4', 'ralouphie/getallheaders' => '3.0.3@120b605dfeb996808c31b6477290a714d356e822', 'symfony/console' => '4.4.x-dev@3650057f1c18dea3cfffdcf2f7c5e39215dcd7b8', 'symfony/filesystem' => '4.4.x-dev@715e7a531bdae109a828f9e91629e5b3b2926beb', 'symfony/finder' => '4.4.x-dev@2543795ab1570df588b9bbd31e1a2bd7037b94f6', 'symfony/polyfill-ctype' => 'dev-main@c6c942b1ac76c82448322025e084cadc56048b4e', 'symfony/polyfill-mbstring' => 'dev-main@5232de97ee3b75b0360528dae24e73db49566ab1', 'symfony/polyfill-php73' => 'dev-main@a678b42e92f86eca04b7fa4c0f6f19d097fb69e2', 'symfony/polyfill-php80' => 'dev-main@dc3063ba22c2a1fd2f45ed856374d79114998f91', 'symfony/service-contracts' => 'dev-main@bf99754c6182a126968b1c2709d18548489f27eb', 'wpcomvip/s3-media-sync' => 'dev-feature/php-scoper@66277cc67b78338bb850fe468ee2ee76aab7cefe');
    private function __construct()
    {
    }
    /**
     * @psalm-pure
     *
     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not
     *                                  cause any side effects here.
     */
    public static function rootPackageName() : string
    {
        if (!\class_exists(\WPCOM_VIP\Composer\InstalledVersions::class, \false) || !\WPCOM_VIP\Composer\InstalledVersions::getRawData()) {
            return self::ROOT_PACKAGE_NAME;
        }
        return \WPCOM_VIP\Composer\InstalledVersions::getRootPackage()['name'];
    }
    /**
     * @throws OutOfBoundsException If a version cannot be located.
     *
     * @psalm-param key-of<self::VERSIONS> $packageName
     * @psalm-pure
     *
     * @psalm-suppress ImpureMethodCall we know that {@see InstalledVersions} interaction does not
     *                                  cause any side effects here.
     */
    public static function getVersion(string $packageName) : string
    {
        if (\class_exists(\WPCOM_VIP\Composer\InstalledVersions::class, \false) && \WPCOM_VIP\Composer\InstalledVersions::getRawData()) {
            return \WPCOM_VIP\Composer\InstalledVersions::getPrettyVersion($packageName) . '@' . \WPCOM_VIP\Composer\InstalledVersions::getReference($packageName);
        }
        if (isset(self::VERSIONS[$packageName])) {
            return self::VERSIONS[$packageName];
        }
        throw new \OutOfBoundsException('Required package "' . $packageName . '" is not installed: check your ./vendor/composer/installed.json and/or ./composer.lock files');
    }
}
